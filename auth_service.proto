syntax = "proto3";
package qreeket;
option go_package = "github.com/qcodelabsllc/qreeket";

import "common.proto";

import "auth.proto";

// authentication service for user login, register, reset password, refresh token, logout and etc.
service AuthService {
  // auth
  rpc login (LoginRequest) returns (StringValue);
  rpc register (RegisterRequest) returns (StringValue);
  rpc reset_password (ResetPasswordRequest) returns (StringValue);
  rpc request_password_reset (RequestPasswordResetRequest) returns (StringValue);
  rpc logout (Empty) returns (Empty);
  rpc verify_password (StringValue) returns (Empty);

  // premium account upgrade
  rpc upgrade_to_premium (Empty) returns (Empty);
  rpc downgrade_to_standard (Empty) returns (Empty);

  // request public access token for unauthenticated calls
  rpc request_public_access_token (Empty) returns (StringValue);

  // validate access token from microservices for authorization (only for internal calls)
  rpc validate_access_token (Empty) returns (ValidateAccessTokenResponse);

  // account
  rpc get_account (Empty) returns (Account);
  rpc get_account_by_phone_number (StringValue) returns (Account);
  rpc get_account_by_id (StringValue) returns (Account);
  rpc update_account (Account) returns (Account);
  rpc delete_account (Empty) returns (Empty);
  rpc authenticate_account (AuthenticateWithSocialAccountRequest) returns (StringValue);
  rpc check_email (StringValue) returns (Empty);
  rpc check_phone_number (StringValue) returns (Empty);

  // country
  rpc get_countries (Empty) returns (GetCountriesResponse);
  rpc get_country_by_id (StringValue) returns (Country);
  rpc add_country (Country) returns (Country);
  rpc delete_country (StringValue) returns (Empty);

  // college
  rpc get_colleges_for_country (StringValue) returns (GetCollegesResponse);
  rpc get_college_by_id (StringValue) returns (College);
  rpc add_college (College) returns (College);
  rpc delete_college (StringValue) returns (Empty);
}